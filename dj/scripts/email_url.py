#!/usr/bin/python

# email_url.py
# emails the video URL to the presenters

from django.core.mail import get_connection, EmailMessage

from process import process

class email_url(process):

    ready_state = 7

    def process_ep(self, ep):
        if self.options.verbose: print ep
        url = ep.public_url or ep.host_url
        if ep.emails and ep.released and url:
            tos = ep.emails.split(',')
            subject = "Video up: %s" % ep.name
            body = """
    The video of your talk is posted:
    %(url)s

    Look at it, make sure the title is spelled right, let me know if it is OK.
    If you are satisfied, tweet it, blog it, whatever it.  No point in making videos if no one watches them.
    
    As soon as I hear back from you, or in a few days, it will be tweeted on @NextDayVideo which is what the attendees were told to follow.  It will also be sent to the event organizers in hopes that they add it to the event website.  

    Email generated by Veyepar, but replies go to Carl.
    
    Reference: %(slug)s
    http://veyepar.nextdayvideo.com:8080/main/E/%(id)s/

    """ % ({'url':url, 'id':ep.id, 'slug':ep.slug })

     
            # connect to the smtp server
            connection = get_connection()
            sender = 'Carl Karsten <carl@nextdayvideo.com>'
            headers = {
                # 'Reply-To': "ChiPy <chicago@python.org>"
                # 'From': sender,
                }    
            email = EmailMessage(subject, body, sender, tos, headers=headers ) 
            ret = connection.send_messages([email])
            print tos, ret
            ret = True # need to figure out what .send_messages returns

        else:
            ret = False
        return ret

if __name__ == '__main__':
    p=email_url()
    p.main()

