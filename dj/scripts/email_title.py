#!/usr/bin/python

# email_url.py
# emails the video URL to the presenters

from django.core.mail import get_connection, EmailMessage

from process import process

class email_title(process):

    ready_state = None

    def process_ep(self, ep):
        if self.options.verbose: print ep
        url = ep.public_url ### or ep.host_url
        if ep.emails and ep.released and url:
            tos = ep.emails.split(',')
            subject = "Video metadata for: %s" % ep.name
            body = """
    According to the released field in the database, your talk is going
    to be recorded and posted online.  If this is a problem, please 
    contact the conference organizers.

    Please review the following text:
    %(title)s
    %(authors)s
    %(description)s

    Problems with the text will need to be fixed in the conference database.

    Also have a look at the attached title slide to verify that it rendered 
    correctly.   If there is a problem with it, first check here for 
    the latest version to see if the problem has already been corrected:
    %(svg_url)s
    
    and then ontact me by repling to this message.

    Reference: #%(id)s  %(slug)s

    Email generated by Veyepar, but replies go to Carl.
    """ % ({ 'title':ep.title, 'authors':ep.authors, 
        'description':ep.description, 'svg_url':url, 
        'id':ep.id, 'slug':ep.slug })

            # connect to the smtp server
            connection = get_connection()
            sender = 'Carl Karsten <carl@nextdayvideo.com>'
            headers = {
                # 'Reply-To': "ChiPy <chicago@python.org>"
                # 'From': sender,
                }    
            email = EmailMessage(subject, body, sender, tos, headers=headers ) 
            ret = connection.send_messages([email])
            print tos, ret
            ret = True # need to figure out what .send_messages returns

        else:
            ret = False
        return ret

if __name__ == '__main__':
    p=email_title()
    p.main()

