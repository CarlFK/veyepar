client checklist:
  release on talk submission
  data driven schedule, api (json)
  AV - audio
  slide show for between talks
  title slide for videos
  room access times
  internet access
  hotel close to venue

Show twinpact feed on slave display.
  note: slave display is also used to play a sponsor slide roll between talks.

veyepar:

  last active date - 
    for shows - 
      sort shows by date on the client page, 
      link to stats.
      
  move state data def from models.py to initial_data.json fixture.

  episode.html save.. UI to show user it got saved.

  chrome doesn't play ogv maybe? figure out what file formats to use for thumbs.  maybe now it does.
  how to keep it from being so agressive about buffering if Play isn't hit 

  store images of recording sheets

  next/prev (match recording sheet: same room/day)

  split long talk (tutorials) into parts.

  error handeling:
      log error, continue with next episode. 
      encode errors:   
        inkscape svg/png fail
        input files missing
        encoder fail

  webm parameters

  command line parameter to set cfg file.
    option to disable reading config (tests should not read config)
    give test script its own cfg

  upload category - 
     needs default, currently hardcoded to "Education"

  upload to youtube
     use testing server for testing
     https://developers.google.com/youtube/2.0/developers_guide_protocol_testing
     delete old version when replaced by new encode.
     don't re-upload the same video (causes duplicate video error)
     # invalid tags cause fail and loop forever - fix this. 
         (fixed by not setting tags)
     
  don't email presenter until youtube is done processing.
    review_1.py is a good place to do this.
  
  state - need something to handle Canceled talks, breaks, etc.  
    disposition?  
  state - mk_titles, email_titles ?
     (currently are done outside of the formal workflow steps, so hard to fix one and re-do)   
  state - really needs something new. like a bunch of "completed" flags.

  flag - do not overwrite when syncing with conf db - 
    this is to handle when I know better than the conference data.

  tweet hashtag - client or show or both?
  pyvideo.org category - client or show or both?
  (are these two the same thing?)

      richard: 
        reference back to veyepar page (hidden to public)
        reference to conference site page (for slides)
      
      save raw json per episode 
      
   move show.schedule_url to client.
    
   implement South data migration foo

   Stop - make it work again - 
     I think it is a buffering problem - 
     the code needs to poll the db, not look at the local cashed value

   zip title svg and images
      http://bazaar.launchpad.net/~inkscape.dev/inkscape/trunk/view/head:/share/extensions/svg_and_media_zip_output.py#L208

encoding:
  soften jump cuts
  create list of cut times relitive to start of final video
     - mainly used for Lighting talks to index each talk
  credits - hold for a few seconds at end.
  channel_copy - document and verify current behaviour
  
slugify talk titles- 
  trunkcate on word boundry when over X chars.
  de-unicode
  add -NNN to deal with colisions, like "keynote-1"

model:
  
  episode:
    languge (German...)

  child table of output files
    mp4, ogv, mp3, facc...
    text: irc logs, transcript, tweets

  change duration from "hh:mm:ss" to float(sec)
  add a real duration of how long the encoded video is
    - end-start is not accurate if chunks have been removed
    - sum of segments is likely good enough
  
  BucketID / Richard Category
    Sometimes this is per client, sometimes per show.
    thought: one field in each, if Show blank, look to client.

  location:
    channel_copy - audio misconfiguration is often caused by venu issues

walpaper 
  logos:
    NextDayVideo, 
    Linux, DVswitch, Python, Django, MLT


recording sheets:
  hostname:____

live cd: mainly for slave
  user in video group
  sudo apt-get install openssh-server dvsource kino mplayer
  ~/dvswitchrc
  10.0.0.2
  avahi to find dvswitch

for unit tests:
  get sphinx or some such speach recognition packaged and in a PPA
    sphinx2-bin fell out of the ubuntu repos due to not being maintained.
    state of the art is not a requirement
    it just needs to recognize a simple phrase, like
       "go forward 10 meeters"   
    which gets encoded and demuxed back out 
    to make sure the encoder didn't muck it up.
    

Transcriptions
    Need a place to host transcriptions
    mix transcriptions with video for sub titling 

OCR - http://software-carpentry.org

encoding 
    flag for odd audio (like missing or very low)
    DD - "There is a new audiolevel filter. See output of melt -query filter=audiolevel"


