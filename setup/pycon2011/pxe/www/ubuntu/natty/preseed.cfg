#### Contents of the preconfiguration file
### Localization
# Locale sets language and country.
d-i debian-installer/locale string en_US

# Keyboard selection.
# Disable automatic (interactive) keymap detection.
d-i console-setup/ask_detect boolean false
#d-i console-setup/modelcode string pc105
d-i console-setup/layoutcode string us
# To select a variant of the selected layout (if you leave this out, the
# basic form of the layout will be used):
#d-i console-setup/variantcode string dvorak

### Network configuration
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# To pick a particular interface instead:
# d-i netcfg/choose_interface select eth1

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
#d-i netcfg/dhcp_timeout string 60

# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
#d-i netcfg/disable_dhcp boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/confirm_static boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
# d-i netcfg/get_hostname string unassigned-hostname
# d-i netcfg/get_domain string unassigned-domain

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish

### Mirror settings
# d-i mirror/country string enter information manually

# d-i mirror/http/hostname string us.archive.ubuntu.com
# d-i mirror/http/directory string /ubuntu

# cfk
d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string us.archive.ubuntu.com
d-i mirror/http/directory string /ubuntu

# proxy (empty string = no proxy)
d-i mirror/http/proxy string http://192.168.2.1:8000/
# d-i mirror/http/proxy string 

# Suite to install.
#d-i mirror/suite string intrepid

# Suite to use for loading installer components (optional).
#d-i mirror/udeb/suite string intrepid

### Partitioning
# If the system has free space you can choose to only partition that space.
# Note: this must be preseeded with a localized (translated) value.
#d-i partman-auto/init_automatically_partition \
#      select Use the largest continuous free space

### cfk 
### 
# d-i partman-auto/disk string /dev/sda
### 
# d-i partman-auto/method string regular

# You can choose from any of the predefined partitioning recipes.
# Note: this must be preseeded with a localized (translated) value.
# d-i partman-auto/choose_recipe select atomic
# d-i partman-auto/choose_recipe select home
# d-i partman-auto/choose_recipe select multi
# d-i partman-auto/choose_recipe select small_disk

# Or provide a recipe of your own...
# The recipe format is documented in the file devel/partman-auto-recipe.txt.
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
# d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
# This makes partman automatically partition without confirmation.

#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

### cfk 
### 
# d-i partman/confirm_write_new_label boolean true
### 
# d-i partman/choose_partition \
#       select Finish partitioning and write changes to disk
### 
# d-i partman/confirm boolean true

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Central

### Apt setup
# You can choose to install restricted and universe software, or to install
# software from the backports repository.
# cfk
d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/multiverse boolean true

# d-i apt-setup/backports boolean true

# Uncomment this to avoid adding security sources, or
# add a hostname to use a different server than security.ubuntu.com.
#d-i apt-setup/security_host string
# d-i apt-setup/security_host string cp600:3142/security.ubuntu.com
# d-i apt-setup/security_host string cp333:9999/ubuntu-security

# Additional repositories, local[0-9] available
#d-i apt-setup/local0/repository string http://local.server/ubuntu feisty main
#d-i apt-setup/local0/comment string local server

# By default the installer requires that repositories be authenticated
# using a known gpg key. This setting can be used to disable that
# authentication. Warning: Insecure, not recommended.
# d-i debian-installer/allow_unauthenticated boolean true

### ubuntu debugging stuff
d-i apt-setup/local0/repository string http://ddebs.ubuntu.com natty main restricted universe multiverse

d-i apt-setup/local0/comment string ubuntu debugging stuff
d-i apt-setup/local0/source boolean true
d-i apt-setup/local0/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x428D7C015E0577F2

### cfk - ppa
d-i apt-setup/local1/repository string http://ppa.launchpad.net/carlfk/ppa/ubuntu natty main
d-i apt-setup/local1/comment string Carls PPA
d-i apt-setup/local1/source boolean true
d-i apt-setup/local1/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x2EB11AEDA224C43C


### cfk - not melt - but stuff 
# d-i apt-setup/local0/repository string http://ppa.launchpad.net/intuitivenipple/video-editors/ubuntu karmic main
# d-i apt-setup/local0/comment string intuitivenipple PPA
# d-i apt-setup/local0/source boolean true
# d-i apt-setup/local0/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x727D031129047922

### cfk - melt
# d-i apt-setup/local1/repository string http://ppa.launchpad.net/sunab/sunab2/ubuntu lucid main
# d-i apt-setup/local1/comment string mlt PPA
# d-i apt-setup/local1/source boolean true
# d-i apt-setup/local1/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0xB5115B98AA836CA8

### cfk - theora
#  d-i apt-setup/local2/repository string http://ppa.launchpad.net/theora/ppa/ubuntu lucid main
#  d-i apt-setup/local2/comment string theora PPA
# d-i apt-setup/local2/source boolean true
# d-i apt-setup/local2/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x51464F3A7DD2460F

### cfk - ffmpeg
# d-i apt-setup/local3/repository string http://ppa.launchpad.net/freshmedia/ppa/ubuntu karmic main
# d-i apt-setup/local3/comment string ffmpeg PPA
# d-i apt-setup/local3/source boolean true
# d-i apt-setup/local3/key string http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0xBB5F483440B62BF8

### cfk - cinelerra
# d-i apt-setup/local1/repository string http://cp600:3142/akirad.cinelerra.org/ akirad-hardy main
# d-i apt-setup/local1/comment string akirad repository from Paolo Rampino
# d-i apt-setup/local1/source boolean true
# d-i apt-setup/local1/key string http://akirad.cinelerra.org/dists/akirad.key

# Enable deb-src lines
#d-i apt-setup/local0/source boolean true
# URL to the public key of the local repository
#d-i apt-setup/local0/key string http://local.server/key

### Account setup
# Skip creation of a root account (normal user account will be able to
# use sudo). The default is false; preseed this to true if you want to set
# a root password.
#d-i passwd/root-login boolean false
# Alternatively, to skip creation of a normal user account.
#d-i passwd/make-user boolean false

# Root password, either in clear text
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# or encrypted using an MD5 hash.
#d-i passwd/root-password-crypted password [MD5 hash]

### cfk
# To create a normal user account.
#d-i passwd/user-fullname string Ubuntu User
### 
d-i passwd/user-fullname string Joe User
### 
d-i passwd/username string juser
# Normal user's password, either in clear text
# d-i passwd/user-password password foo
# d-i passwd/user-password-again password foo
# or encrypted using an MD5 hash.
### 
d-i passwd/user-password-crypted password $6$khprmotoVWYLZY2W$Gj5Y6p4R.LsXQdL2xf6umhInzZ9GCG6USXB0XIl86m5.IbqSOPXJ0mxVUE7y5kGFE/arHgExAxoz0kEULiplZ.

d-i passwd/user-default-groups string audio cdrom video juser adm dialout cdrom plugdev lpadmin admin 
# sambashare

# Set to true if you want an encrypted private directory for the first user.
## d-i user-setup/encrypted-private boolean false
d-i user-setup/encrypt-home boolean false

d-i pkgsel/update-policy string none

### Base system installation
# Select the initramfs generator used to generate the initrd for 2.6 kernels.
#d-i base-installer/kernel/linux/initramfs-generators string yaird

### Boot loader installation
# Grub is the default boot loader (for x86). If you want lilo installed
# instead, uncomment this:
#d-i grub-installer/skip boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
# d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if if finds some other OS
# too, which is less safe as it might not be able to boot that other OS.
# d-i grub-installer/with_other_os boolean true

# Alternatively, if you want to install to a location other than the mbr,
# uncomment and edit these lines:
#d-i grub-installer/bootdev  string (hd0,0)
#d-i grub-installer/only_debian boolean false
#d-i grub-installer/with_other_os boolean false

### Package selection
# cfk (passed from pxe boot parameters)
#tasksel tasksel/first multiselect ubuntu-standard, ubuntu-desktop

#tasksel tasksel/first multiselect ubuntu-standard, lamp-server
#tasksel tasksel/first multiselect ubuntu-standard, kubuntu-desktop

### extra packages
# cfk
### 

d-i pkgsel/include string screen openssh-server nfs-common git-core subversion git-svn build-essential xclip curl python-setuptools mercurial libqt4-dev installation-guide-i386 gdb libc-dbg kerneloops vim python-wxversion libboost-dev libboost-thread-dev libgtkmm-2.4-dev libxv-dev cmake libavcodec-dev libasound2-dev autotools-dev libltdl7-dev m4 kexec-tools tftp iotop iftop ffmpeg ipython ack-grep libavcodec-dev libavcodec52 python-virtualenv squid-deb-proxy-client kino imagemagick mplayer vlc dvgrab dvsink dvsource dvswitch

# dvsmon

# ffmpe192.168.2.1theora


# d-i pkgsel/include string screen openssh-server nfs-common git git-core subversion git-svn build-essential xclip curl python-setuptools mercurial libqt4-dev installation-guide-i386 gdb libc-dbg kerneloops vim python-wxversion

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
#popularity-contest popularity-contest/participate boolean false

### Finishing up the first stage install
# Avoid that last message about the install being complete.
### 
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

### X configuration
# X can detect the right driver for some cards, but if you're preseeding,
# you override whatever it chooses. Still, vesa will work most places.
#xserver-xorg xserver-xorg/config/device/driver select vesa

# A caveat with mouse autodetection is that if it fails, X will retry it
# over and over. So if it's preseeded to be done, there is a possibility of
# an infinite loop if the mouse is not autodetected.
#xserver-xorg xserver-xorg/autodetect_mouse boolean true

# Monitor autodetection is recommended.
xserver-xorg xserver-xorg/autodetect_monitor boolean true
# Uncomment if you have an LCD display.
#xserver-xorg xserver-xorg/config/monitor/lcd boolean true
# X has three configuration paths for the monitor. Here's how to preseed
# the "medium" path, which is always available. The "simple" path may not
# be available, and the "advanced" path asks too many questions.
xserver-xorg xserver-xorg/config/monitor/selection-method \
       select medium
xserver-xorg xserver-xorg/config/monitor/mode-list \
       select 1024x768 @ 60 Hz

### Preseeding other packages
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file

glibc/disable-screensaver       boolean true
libpam-modules/disable-screensaver      boolean true


#### Advanced options
### Shell commands
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb
# cfk - get early script from 192.168.2.1 run it.
d-i preseed/early_command string cd /tmp && wget http://192.168.2.1/early_command.sh && chmod u+x early_command.sh && ./early_command.sh

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh

# cfk - get late script from 192.168.2.1 run it.
d-i preseed/late_command  string cd /tmp && wget http://192.168.2.1/ubuntu/natty/late_command_pycon.sh && chmod u+x late_command_pycon.sh && ./late_command_pycon.sh


